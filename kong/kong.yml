_format_version: "3.0"
_transform: true

# JWT Consumer with Keycloak Public Key
consumers:
  - username: keycloak-issuer
    jwt_secrets:
      - key: "http://18.136.195.180:8080/realms/demo"
        algorithm: RS256
        rsa_public_key: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmsZ4kh6BgkjhxcVSg8Sh+GbXvzIpyHNC
          v1OUu20bLbBj8+0fa+H45Am2aqf52OyuCNVW/4bIX/xpLvHsBgotMSzSHApAO5eBg65Lfo1gidf7
          fnruv9g7Hvw2UDdzeE0I9IfH0vy2+BzkveLTFMtVB/qYwpK1wKehZO4KcBODkuj9Icg9HpUFpgqw
          gCS72IzK4i1wRFvk8CvLxlqyeidYocw90SJsckUECmYuRvEB/auAzsYn7Gv2lFkLmZpJKIYFJKnH
          vHqw2ERqZvR5wnG0bb8GVt+kc1gpqUOvBMtp8hSIS0+XEsm1a+wzf9XVFDC3cKNuOXfAWItLSkI1
          KShtcwIDAQAB
          -----END PUBLIC KEY-----
        

# Global Plugins
plugins:
  - name: http-log
    config:
      http_endpoint: "http://18.136.195.180:8081/kong"
      method: POST
      timeout: 10000
      keepalive: 60000
      queue:
        max_batch_size: 10
        max_retry_time: 60
        max_coalescing_delay: 5

services:
  # Login Service - Public endpoint with rate limiting and schema validation
  - name: auth-service
    url: http://18.136.195.180:3000
    routes:
      - name: auth-route
        paths: ["/auth/login"]
        strip_path: false
        methods: ["POST"]
        plugins:
          # Schema validation implemented via embedded Lua
          - name: pre-function
            config:
              access:
                - |
                  local body, err = kong.request.get_body()
                  if err or not body then
                    return kong.response.exit(400, { message = "Payload must be valid JSON. " .. (err or "") })
                  end
                  if type(body.username) ~= "string" or type(body.password) ~= "string" then
                    return kong.response.exit(400, { message = "Username and password must be strings" })
                  end
                  local username_len = #body.username
                  local password_len = #body.password
                  if username_len < 3 or username_len > 50 or password_len < 6 or password_len > 100 then
                    return kong.response.exit(400, { message = "Invalid credential format" })
                  end
          # Aggressive Rate Limiting for Brute-Force Protection
          - name: rate-limiting
            config:
              second: 5
              minute: 60
              policy: local
              fault_tolerant: true
              hide_client_headers: false
          # Request Size Limiting
          - name: request-size-limiting
            config:
              allowed_payload_size: 128

  # Protected API Service - Requires JWT Authentication
  - name: user-service
    url: http://18.136.195.180:3000
    routes:
      - name: user-route
        paths: ["/api"]
        strip_path: false
        methods: ["GET", "POST", "PUT", "DELETE"]
        plugins:
          # JWT Authentication - Verify token from Keycloak
          - name: jwt
            config:
              key_claim_name: iss
              claims_to_verify:
                - exp
              run_on_preflight: true
              maximum_expiration: 3600
          # Rate Limiting for API protection
          - name: rate-limiting
            config:
              minute: 100
              policy: local
              fault_tolerant: true
